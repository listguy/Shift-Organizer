[{"/home/nitzan/Documents/side-projects/Shift Organizer/src/index.tsx":"1","/home/nitzan/Documents/side-projects/Shift Organizer/src/App.tsx":"2","/home/nitzan/Documents/side-projects/Shift Organizer/src/components/WeekTable.tsx":"3","/home/nitzan/Documents/side-projects/Shift Organizer/src/shift_organizer_modules/utils/Entities.js":"4","/home/nitzan/Documents/side-projects/Shift Organizer/src/shift_organizer_modules/shiftOrginazor.js":"5","/home/nitzan/Documents/side-projects/Shift Organizer/src/shift_organizer_modules/utils/interface.js":"6","/home/nitzan/Documents/side-projects/Shift Organizer/src/components/AddStudent.tsx":"7","/home/nitzan/Documents/side-projects/Shift Organizer/src/components/StudentTicket.tsx":"8"},{"size":506,"mtime":1608938157274,"results":"9","hashOfConfig":"10"},{"size":5009,"mtime":1609152011010,"results":"11","hashOfConfig":"10"},{"size":1368,"mtime":1608935661559,"results":"12","hashOfConfig":"10"},{"size":4981,"mtime":1609153135729,"results":"13","hashOfConfig":"10"},{"size":14649,"mtime":1609153181985,"results":"14","hashOfConfig":"10"},{"size":235,"mtime":1609153099725,"results":"15","hashOfConfig":"10"},{"size":998,"mtime":1608977594268,"results":"16","hashOfConfig":"10"},{"size":5531,"mtime":1609152205991,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1bwibib",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nitzan/Documents/side-projects/Shift Organizer/src/index.tsx",[],["37","38"],"/home/nitzan/Documents/side-projects/Shift Organizer/src/App.tsx",["39","40","41"],"import WeekTable from \"./components/WeekTable\";\nimport { Preference, Student } from \"./shift_organizer_modules/utils/Entities\";\nimport {\n  dayInMS,\n  IOrganizedShiftDay,\n  IPreference,\n  IShiftManager,\n  IStudent,\n  shiftInMS,\n  weekInMs,\n} from \"./shift_organizer_modules/utils/interface\";\nimport ShiftManager from \"./shift_organizer_modules/shiftOrginazor\";\nimport { useEffect, useState } from \"react\";\nimport AddStudent from \"./components/AddStudent\";\nimport Swal, { SweetAlertResult } from \"sweetalert2\";\nimport StudentsDeatails from \"./components/StudentTicket\";\n\nconst names: string[] = [\n  \"Nitzan\",\n  \"Nadav\",\n  \"Asaf\",\n  \"Shimon\",\n  \"Anna\",\n  \"Idan\",\n  \"Danel\",\n  \"Lahav\",\n  \"Sean\",\n  \"Omri\",\n];\nconst getRandomDay: () => number = () => Math.floor(Math.random() * 7) + 1;\nconst getRandomWeek: () => number = () => Math.floor(Math.random() * 0) + 1;\nconst getShift: () => number = () => [0, 1, 2][Math.floor(Math.random() * 3)];\nconst getAvailable: () => boolean = () =>\n  Boolean(Math.floor(Math.random() * 2));\n\nconst SM = new ShiftManager();\n\n// const students: IStudent[] =\nnames.map((name: string) => {\n  const newStudent: IStudent = SM.addStudent(name)!;\n  const pref: IPreference = new Preference(\n    newStudent,\n    getRandomWeek() * weekInMs +\n      getRandomDay() * dayInMS +\n      getShift() * shiftInMS,\n    getAvailable()\n  );\n  newStudent.addPreference(pref);\n});\n\nfunction App() {\n  const [students, setStudents] = useState<IStudent[]>(SM.getAllStudents());\n  const [shiftsState, setShiftState] = useState<IOrganizedShiftDay[][]>(\n    SM.getAllShifts()\n  );\n\n  // Adds a new student to the shift Manager\n  const addStudent: (name: string, sm?: IShiftManager) => IStudent | boolean = (\n    name: string,\n    sm: IShiftManager = SM\n  ) => {\n    try {\n      const newStudent: IStudent = sm.addStudent(name)!;\n      setStudents(sm.getAllStudents());\n      return newStudent;\n    } catch (e) {\n      console.log(e);\n      return false;\n    }\n  };\n\n  const removeStudent: (name: string, sm?: IShiftManager) => boolean | Error = (\n    name: string,\n    sm: IShiftManager = SM\n  ) => {\n    try {\n      sm.removeStudent(name);\n      setStudents(sm.getAllStudents());\n      return true;\n    } catch (e) {\n      console.log(e);\n      return e;\n    }\n  };\n\n  const addPreferenceToStudent: (\n    studentName: string,\n    shiftTimeStamp: number,\n    available?: boolean,\n    sm?: IShiftManager\n  ) => boolean | Error = (\n    studentName: string,\n    shiftTimeStamp: number,\n    available: boolean = true,\n    sm: IShiftManager = SM\n  ) => {\n    try {\n      sm.addPreferenceToStudent(studentName, available, shiftTimeStamp);\n      setStudents(sm.getAllStudents());\n      return true;\n    } catch (e) {\n      return e;\n    }\n  };\n\n  const removePreferenceFromStudent: (\n    studentName: string,\n    shiftTimeStamp: number,\n    sm?: IShiftManager\n  ) => boolean | Error = (\n    studentName: string,\n    shiftTimeStamp: number,\n    sm: IShiftManager = SM\n  ) => {\n    try {\n      sm.removePreferenceFromStudent(studentName, shiftTimeStamp);\n      setStudents(sm.getAllStudents());\n      return true;\n    } catch (e) {\n      return e;\n    }\n  };\n\n  const organizeShifts: () => void = () => {\n    if (students.length < 7) {\n      Swal.fire({\n        title: \"Hey!\",\n        text: `Only ${students.length} ${\n          students.length > 1 ? \"students are\" : \"student is\"\n        } saved in the system. Procceed?`,\n        showDenyButton: true,\n        confirmButtonText: \"Yes\",\n        denyButtonText: \"No\",\n      }).then((result: SweetAlertResult) => {\n        if (result.isConfirmed) {\n          SM.organize();\n          setShiftState(SM.getAllShifts());\n        }\n      });\n    } else {\n      SM.organize();\n      setShiftState(SM.getAllShifts());\n    }\n  };\n\n  // useEffect(() => {\n  //   addStudent(\"Nitzan\");\n  // }, []);\n\n  return (\n    <>\n      <AddStudent addFunction={addStudent} />\n      <button onClick={organizeShifts}>Organize!</button>\n      <h1 style={{ textAlign: \"center\" }}>This week's shifts</h1>\n      {/* <h2>Available Students</h2>\n      <div>\n        {students.map((student: IStudent) => (\n          <li> {student.name}</li>\n        ))}\n      </div> */}\n      <StudentsDeatails\n        students={students}\n        addPref={addPreferenceToStudent}\n        rmvPref={removePreferenceFromStudent}\n        rmvStudent={removeStudent}\n      />\n      Week 1\n      <WeekTable shifts={shiftsState[0]} />\n      Week 2\n      <WeekTable shifts={shiftsState[1]} />\n      Week 3\n      <WeekTable shifts={shiftsState[2]} />\n      Week 4\n      <WeekTable shifts={shiftsState[3]} />\n      {/* <h2>Students Preferences</h2>\n      {students.map((student: IStudent) => (\n        <li>\n          <b>{student.name}</b>,{\" \"}\n          {student?.preferences.map(\n            (pref: IPreference) =>\n              `${pref.shift.day}-${pref.shift.time} ${\n                pref.available ? \"available\" : \"unavailable\"\n              }`\n          )}\n        </li>\n      ))} */}\n    </>\n  );\n}\n\nexport default App;\n","/home/nitzan/Documents/side-projects/Shift Organizer/src/components/WeekTable.tsx",[],"/home/nitzan/Documents/side-projects/Shift Organizer/src/shift_organizer_modules/utils/Entities.js",["42","43","44"],"/home/nitzan/Documents/side-projects/Shift Organizer/src/shift_organizer_modules/shiftOrginazor.js",["45","46"],"/home/nitzan/Documents/side-projects/Shift Organizer/src/shift_organizer_modules/utils/interface.js",["47"],"/home/nitzan/Documents/side-projects/Shift Organizer/src/components/AddStudent.tsx",["48"],"import React, { useCallback } from \"react\";\nimport Swal from \"sweetalert2\";\nimport {\n  IShiftManager,\n  IStudent,\n} from \"../shift_organizer_modules/utils/interface\";\n\nexport default function AddStudent({\n  addFunction,\n}: {\n  addFunction: (name: string, sm?: IShiftManager) => IStudent | boolean;\n}) {\n  const promptModal = useCallback(async () => {\n    const { value: name } = await Swal.fire({\n      title: \"Enter New Student's Name\",\n      input: \"text\",\n      showCancelButton: true,\n      inputPlaceholder: \"Name...\",\n      inputValidator: (name: string) => {\n        if (!name) return \"Please enter a valid name\";\n        return null;\n      },\n    });\n\n    if (name) {\n      const sucess: boolean | IStudent = addFunction(name);\n      if (sucess) {\n        Swal.fire(\"Woohoo!\", `Student ${name} added!`, \"success\");\n      } else {\n        Swal.fire(\"Oops..\", `Student ${name} alredy exists!`, \"error\");\n      }\n    }\n  }, []);\n\n  return <button onClick={promptModal}>Add student</button>;\n}\n","/home/nitzan/Documents/side-projects/Shift Organizer/src/components/StudentTicket.tsx",["49","50","51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":22,"nodeType":"58","messageId":"59","endLine":2,"endColumn":29},{"ruleId":"56","severity":1,"message":"60","line":13,"column":10,"nodeType":"58","messageId":"59","endLine":13,"endColumn":19},{"ruleId":"61","severity":1,"message":"62","line":39,"column":26,"nodeType":"63","messageId":"64","endLine":39,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":1,"column":1,"nodeType":"67","messageId":"68","endLine":1,"endColumn":14,"fix":"69"},{"ruleId":"70","severity":1,"message":"71","line":55,"column":51,"nodeType":"72","messageId":"73","endLine":55,"endColumn":53},{"ruleId":"74","severity":1,"message":"75","line":136,"column":9,"nodeType":"76","messageId":"77","endLine":143,"endColumn":10},{"ruleId":"65","severity":1,"message":"66","line":1,"column":1,"nodeType":"67","messageId":"68","endLine":1,"endColumn":14,"fix":"78"},{"ruleId":"79","severity":1,"message":"80","line":282,"column":10,"nodeType":"58","messageId":"59","endLine":282,"endColumn":33},{"ruleId":"65","severity":1,"message":"66","line":1,"column":1,"nodeType":"67","messageId":"68","endLine":1,"endColumn":14,"fix":"81"},{"ruleId":"82","severity":1,"message":"83","line":33,"column":6,"nodeType":"84","endLine":33,"endColumn":8,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":89,"column":6,"nodeType":"84","endLine":89,"endColumn":8,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":117,"column":5,"nodeType":"84","endLine":117,"endColumn":7,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"90","line":142,"column":6,"nodeType":"84","endLine":142,"endColumn":8,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"@typescript-eslint/no-unused-vars","'Student' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"94","text":"95"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",{"range":"96","text":"95"},"no-unused-vars","'evaluateCurrentShiftsOf' is defined but never used.",{"range":"97","text":"95"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'addFunction'. Either include it or remove the dependency array. If 'addFunction' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["98"],"React Hook useCallback has a missing dependency: 'addPref'. Either include it or remove the dependency array. If 'addPref' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["99"],"React Hook useCallback has a missing dependency: 'rmvPref'. Either include it or remove the dependency array. If 'rmvPref' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["100"],"React Hook useCallback has a missing dependency: 'rmvStudent'. Either include it or remove the dependency array. If 'rmvStudent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["101"],"no-global-assign","no-unsafe-negation",[0,13],"",[0,13],[0,13],{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [addFunction]",{"range":"110","text":"111"},"Update the dependencies array to be: [addPref]",{"range":"112","text":"113"},"Update the dependencies array to be: [rmvPref]",{"range":"114","text":"115"},"Update the dependencies array to be: [rmvStudent]",{"range":"116","text":"117"},[929,931],"[addFunction]",[2747,2749],"[addPref]",[3610,3612],"[rmvPref]",[4397,4399],"[rmvStudent]"]